# Template resources
Resources:
  # S3 bucket where artifacts will be stored
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - ""
        - - Ref: ProjectName
          - -artifacts
      Tags:
        - Key: Project
          Value:
            Ref: ProjectName
      # Determines how long artifacts are stored
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays:
              Ref: ArtifactLifetimeInDays
            Status: Enabled

  # S3 bucket where the backend will be stored
  BackendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - ""
        - - Ref: ProjectName
          - -backend
      Tags:
        - Key: Project
          Value:
            Ref: ProjectName

  # S3 bucket where the frontend will be stored
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - ""
        - - Ref: ProjectName
          - -frontend
      Tags:
        - Key: Project
          Value:
            Ref: ProjectName
      WebsiteConfiguration:
        IndexDocument:
          Ref: IndexDocumentName
        ErrorDocument:
          Ref: ErrorDocumentName

  # CodeBuild project for the backend
  BackendBuilder:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE

      # Build environment
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER

      # Name of the CodeBuild project
      Name: !Join
        - ""
        - - Ref: ProjectName
          - "-backend-builder"

      # Queuing timeout
      QueuedTimeoutInMinutes: 20

      # IAM role for the builder
      ServiceRole: !GetAtt [BuildersRole, Arn]

      Source:
        BuildSpec: backend/buildspec.yml
        Type: CODEPIPELINE
      Tags:
        - Key: Project
          Value:
            Ref: ProjectName

      # Building timeout
      TimeoutInMinutes: 5

  # CodeBuild project for the frontend
  FrontendBuilder:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE

      # Build environment
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        # Environment variable used for clearing the bucket before deployment
        EnvironmentVariables:
          - Name: OUTPUT_BUCKET
            Value: !Ref FrontendBucket
            Type: PLAINTEXT

      # Name of the CodeBuild project
      Name: !Join
        - ""
        - - Ref: ProjectName
          - "-frontend-builder"

      # Queuing timeout
      QueuedTimeoutInMinutes: 20

      # IAM role for the builder
      ServiceRole: !GetAtt [BuildersRole, Arn]

      Source:
        BuildSpec: frontend/buildspec.yml
        Type: CODEPIPELINE
      Tags:
        - Key: Project
          Value:
            Ref: ProjectName

      # Building timeout
      TimeoutInMinutes: 5

  # IAM role for the builders
  BuildersRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: ["sts:AssumeRole"]
            Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]

      # Builder permissions
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # Cloudwatch permissions
              - Effect: "Allow"
                Action:
                  - "cloudwatch:*"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              # Permissions for retrieving the source artifact
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                Resource: !Join
                  - ""
                  - - !GetAtt [ArtifactBucket, Arn]
                    - /*
              # Permissions for clearing the output bucket
              - Effect: "Allow"
                Action:
                  - "s3:ListBucket"
                Resource: !GetAtt [FrontendBucket, Arn]
              - Effect: "Allow"
                Action:
                  - "s3:DeleteObject"
                Resource: !Join
                  - ""
                  - - !GetAtt [FrontendBucket, Arn]
                    - /*

# Template parameters
Parameters:
  # How many days artifacts are stored
  ArtifactLifetimeInDays:
    Type: Number
    Description: Specify how many days you want artifacts to be stored for (1->180 days accepted)
    Default: 30
    MaxValue: 180
    MinValue: 1

  # Branch name
  BranchName:
    Type: String
    Description: Enter the branch name that you want to be used for the build

  # CodeStar Connection
  CodeStarConnection:
    Type: String
    Description: Enter the ARN of the CodeStar connection you want to use

  # Name of the error file
  ErrorDocumentName:
    Type: String
    Default: error.html
    Description: Enter the name (or path) of your error file

  # Name of the index file
  IndexDocumentName:
    Type: String
    Default: index.html
    Description: Enter the name (or path) of your index file

  # Then name of the project
  ProjectName:
    Type: String
    Description: Enter what you want to call this project. Must be lowercase. Used for naming/tagging resources
    AllowedPattern: "[a-z0-9_-]+"

  # Github username
  RepositoryOwner:
    Type: String
    Description: Enter the git provider username of the repository owner

  # Github repository name
  RepositoryName:
    Type: String
    Description: Enter the name of the repository you want to build

# Template metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Parameters:
          - ProjectName
          - ArtifactLifetimeInDays
      - Label:
          default: "Git configuration"
        Parameters:
          - CodeStarConnection
          - RepositoryOwner
          - RepositoryName
          - BranchName
      - Label:
          default: "Hosting configuration"
        Parameters:
          - IndexDocumentName
          - ErrorDocumentName
